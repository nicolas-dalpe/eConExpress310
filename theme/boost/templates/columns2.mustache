{{!
    This file is part of Moodle - http://moodle.org/

    Moodle is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Moodle is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
}}
{{!
    @template theme_boost/columns2

    Admin time setting template.

    Boost 2 column layout template.

    Context variables required for this template:
    * sitename - The name of the site
    * output - The core renderer for the page
    * bodyattributes - attributes for the body tag as a string of html attributes
    * sidepreblocks - HTML for the blocks
    * hasblocks - true if there are blocks on this page
    * navdraweropen - true if the nav drawer should be open on page load
    * regionmainsettingsmenu - HTML for the region main settings menu
    * hasregionmainsettingsmenu - There is a region main settings menu on this page.

    Example context (json):
    {
        "sitename": "Moodle",
        "output": {
            "doctype": "<!DOCTYPE html>",
            "page_title": "Test page",
            "favicon": "favicon.ico",
            "main_content": "<h1>Headings make html validators happier</h1>"
         },
        "bodyattributes":"",
        "sidepreblocks": "<h2>Blocks html goes here</h2>",
        "hasblocks":true,
        "navdraweropen":true,
        "regionmainsettingsmenu": "",
        "hasregionmainsettingsmenu": false
    }
}}
{{> theme_boost/head }}

<body {{{ bodyattributes }}}>
{{> core/local/toast/wrapper}}

<div id="page-wrapper" class="d-print-block">

    {{{ output.standard_top_of_body_html }}}

    {{> theme_boost/navbar }}
    {{> theme_boost/nav-drawer }}

    <div id="page" class="container-fluid d-print-block">
        {{{ output.full_header }}}

        <div id="page-content" class="row pb-3 d-print-block">
            <div id="region-main-box" class="col-12">
                {{#hasregionmainsettingsmenu}}
                <div id="region-main-settings-menu" class="d-print-none {{#hasblocks}}has-blocks{{/hasblocks}}">
                    <div> {{{ output.region_main_settings_menu }}} </div>
                </div>
                {{/hasregionmainsettingsmenu}}
                <section id="region-main" {{#hasblocks}}class="has-blocks mb-3"{{/hasblocks}} aria-label="{{#str}}content{{/str}}">

                    {{#hasregionmainsettingsmenu}}
                        <div class="region_main_settings_menu_proxy"></div>
                    {{/hasregionmainsettingsmenu}}
                    {{{ output.course_content_header }}}
                    {{{ output.main_content }}}
                    {{{ output.activity_navigation }}}
                    {{{ output.course_content_footer }}}

                </section>
                {{#hasblocks}}
                <section data-region="blocks-column" class="d-print-none" aria-label="{{#str}}blocks{{/str}}">
                    {{{ sidepreblocks }}}
                </section>
                {{/hasblocks}}
            </div>
        </div>
    </div>
    {{{ output.standard_after_main_region_html }}}
    {{> theme_boost/footer }}
</div>

    {{#isdashboard}}
        <!-- Add Watson only on the Dashboard -->
        <script>
            window.watsonAssistantChatOptions = {
                integrationID: "ae964727-2121-4bbf-92dd-24071ecf4a53", // The ID of this integration.
                region: "eu-gb", // The region your integration is hosted in.
                serviceInstanceID: "b3f31bca-e7ac-4253-99b1-473807602618", // The ID of your service instance.
                debug: true,
                openChatByDefault: true,
                sessionHistoryBeta: false,
                onLoad: function(instance) {
                    instance.render();

                    setTimeout(function() {
                        var button = document.createElement('button');
                        button.textContent = 'Clear History';
                        button.addEventListener('click', function() {
                            //console.log(instance.getState());
                            for (var i = 0; i < sessionStorage.length; i++){
                                //console.log(sessionStorage.key(i));
                                sessionStorage.removeItem(sessionStorage.key(i));
                            }
                            
                            instance.destroySession();
                            var wac_messages = Array.from(document.querySelectorAll('.WAC__message:not(.WAC__message-0)'));
                            wac_messages.forEach(function(wac_message) {
                                wac_message.remove();
                            });
                        });
                        document.getElementById('WAC__header-name').append(button);
                    }, 1000);
                    
                }
            };
            setTimeout(function(){
                const t=document.createElement('script');
                t.src="https://web-chat.global.assistant.watson.appdomain.cloud/loadWatsonAssistantChat.js";
                document.head.appendChild(t);
            });
        </script>
        <!-- Add Watson only on the Dashboard -->
        <!-- OLD SCRIPT <script>
            window.watsonAssistantChatOptions = {
                integrationID: "ae964727-2121-4bbf-92dd-24071ecf4a53", // The ID of this integration.
                region: "eu-gb", // The region your integration is hosted in.
                serviceInstanceID: "b3f31bca-e7ac-4253-99b1-473807602618", // The ID of your service instance.
                onLoad: function(instance) { instance.render(); }
            };
            setTimeout(function(){
                const t=document.createElement('script');
                t.src="https://web-chat.global.assistant.watson.appdomain.cloud/loadWatsonAssistantChat.js";
                document.head.appendChild(t);
            });
        </script> -->
    {{/isdashboard}}
</body>
</html>
{{#js}}
M.util.js_pending('theme_boost/loader');
require(['theme_boost/loader'], function() {
    M.util.js_complete('theme_boost/loader');
});

M.util.js_pending('theme_boost/drawer');
require(['theme_boost/drawer'], function(drawer) {
    drawer.init();
    M.util.js_complete('theme_boost/drawer');
});
{{/js}}
