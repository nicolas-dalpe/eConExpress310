{"version":3,"sources":["../src/mod_ainst_reorder.js"],"names":["define","$","str","notification","SortableList","ajax","init","type","order_field","click","hideNotification","ordered_list","each","i","e","attr","promises","call","methodname","args","done","get_strings","component","s","addNotification","message","hideNotificationQueue","fail","sortSections","moveHandlerSelector","getElementName","sectionName","element","Deferred","resolve","t","parseInt","isNaN","setTimeout","el","length","hide","remove"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manage the assessment and section reorder.\n *\n * @module     mod_ainst/reorder\n * @package    mod_ainst\n * @copyright  2020 Knowledge One Inc. {@link http://knowledgeone.ca}\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n define(['jquery', 'core/str', 'core/notification', 'core/sortable_list', 'core/ajax'],\n    function($, str, notification, SortableList, ajax) {\n\n    return {\n\n        /**\n         * Function being called by the js_call_amd()\n         * @param str type The item to reorder. assignment or section\n         */\n        init: function(type) {\n\n            // Selector of the list item to reorder.\n            var sortable_list = '#items-list';\n\n            // The name of the order column in database.\n            var order_field = '';\n\n            $('.btn').click(function() {\n\n                // Hide all notification in case the timeout is not exhausted and there is a new reorder.\n                hideNotification(\".alert\");\n\n                // Use the right order database field.\n                if (type == 'assignment') {\n                    order_field = 'inst_order';\n                } else if (type == 'section') {\n                    order_field = 'section_order';\n                }\n\n                // When the item is dropped, get the list of assessment and their new order.\n                var ordered_list = {};\n                $(sortable_list + ' > li').each(function(i, e) {\n                    ordered_list['item_' + i] = {\n                        'id': $(e).attr('data-sectionname'),\n                        [order_field]: i\n                    };\n                });\n\n                // Send the new order to the server.\n                var promises = ajax.call([{\n                    methodname: 'mod_ainst_reorder' + type,\n                    args: {[type]: ordered_list}\n                }]);\n\n                // Process the server response.\n                promises[0].done(function() {\n\n                    // Get the notification message to display.\n                    str.get_strings([\n                        {'key': 'reorder_' + type + '_success', component: 'ainst'}\n                    ]).done(function(s) {\n                        // Display the Notification.\n                        notification.addNotification({message: s[0], type: \"success\"});\n                        // Hide Notification after x seconds.\n                        hideNotificationQueue(\"#user-notifications .alert\");\n                    });\n                }).fail(function() {\n                    str.get_strings([\n                        {'key': 'reorder_' + type + '_error', component: 'ainst'}\n                    ]).done(function(s) {\n                        notification.addNotification({message: s[0], type: \"error\"});\n                    });\n                });\n\n            });\n\n            var sectionName = function(element) {\n                return $.Deferred().resolve(element.attr('data-sectionname'));\n            };\n\n            // Sort sections.\n            var sortSections = new SortableList(sortable_list, {\n                // We need a specific handler here because otherwise the handler from embedded activities triggers section move.\n                moveHandlerSelector: sortable_list + ' > li > span > [data-drag-type=move]'\n            });\n            sortSections.getElementName = sectionName;\n\n            /**\n             * hideNotificationQueue()\n             * Hide notification after x milliseconds\n             * str e The element selector to hide\n             * int t The timeout length in millisecond\n             */\n            function hideNotificationQueue(e, t = 10000) {\n\n                // Make sure we have a timeout value.\n                t = parseInt(t, 10);\n                if (isNaN(t)) {\n                    t = 10000;\n                }\n\n                // Hide notification after t milliseconds\n                setTimeout(function() {hideNotification(e, t);}, t);\n            }\n\n             /**\n             * hideNotification()\n             * Hide notification immediately\n             * str e The element selector to hide\n             */\n            function hideNotification(e) {\n                // Cache element\n                var el = $(e);\n\n                // Make sure we have an element to hide.\n                if (el.length) {\n\n                    // Hide and remove the notification.\n                    el.hide('slow', function() {el.remove();});\n                }\n            }\n        } // init()\n    };\n});\n"],"file":"mod_ainst_reorder.min.js"}