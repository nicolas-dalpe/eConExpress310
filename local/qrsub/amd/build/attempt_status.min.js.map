{"version":3,"sources":["../src/attempt_status.js"],"names":["define","$","str","ajax","init","step","attemptid","cmid","setInterval","get_attempt_number","get_attempt_status","console","log","promises","call","methodname","args","done","r","number","document","location","href","id","fail","status","html"],"mappings":"AAwBCA,OAAM,8BAAC,CAAC,QAAD,CAAW,UAAX,CAAuB,WAAvB,CAAD,CACH,SAASC,CAAT,CAAYC,CAAZ,CAAiBC,CAAjB,CAAuB,CAEvB,MAAO,CAMHC,IAAI,CAAE,cAASC,CAAT,CAAeC,CAAf,CAA0BC,CAA1B,CAAgC,CAElC,GAAY,UAAR,EAAAF,CAAJ,CAAwB,CACpBG,WAAW,CAAC,UAAY,CAAEC,CAAkB,CAACH,CAAD,CAAc,CAA/C,CAAiD,GAAjD,CACd,CAFD,IAEO,CACHE,WAAW,CAAC,UAAY,CAAEE,CAAkB,CAACJ,CAAD,CAAc,CAA/C,CAAiD,GAAjD,CACd,CAED,QAASG,CAAAA,CAAT,CAA4BH,CAA5B,CAAuC,CACnCK,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAEA,GAAIC,CAAAA,CAAQ,CAAGV,CAAI,CAACW,IAAL,CAAU,CAAC,CACtBC,UAAU,CAAE,4BADU,CAEtBC,IAAI,CAAE,CAAE,UAAaV,CAAf,CAFgB,CAAD,CAAV,CAAf,CAMAO,CAAQ,CAAC,CAAD,CAAR,CAAYI,IAAZ,CAAiB,SAAUC,CAAV,CAAa,CAC1B,GAAgB,CAAZ,EAAAA,CAAC,CAACC,MAAN,CAAmB,CACfC,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,CAAyB,yBAA2Bf,CAAI,CAACgB,EAC5D,CACJ,CAJD,EAIGC,IAJH,CAIQ,UAAY,CAChBb,OAAO,CAACC,GAAR,CAAY,2BAAZ,CACH,CAND,CAOH,CAED,QAASF,CAAAA,CAAT,CAA4BJ,CAA5B,CAAuC,CAEnCK,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAGA,GAAIC,CAAAA,CAAQ,CAAGV,CAAI,CAACW,IAAL,CAAU,CAAC,CACtBC,UAAU,CAAE,4BADU,CAEtBC,IAAI,CAAE,CAAE,UAAaV,CAAf,CAFgB,CAAD,CAAV,CAAf,CAMAO,CAAQ,CAAC,CAAD,CAAR,CAAYI,IAAZ,CAAiB,SAAUC,CAAV,CAAa,CAC1B,GAAgB,UAAZ,EAAAA,CAAC,CAACO,MAAN,CAA4B,CACxBL,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,CAAyB,yBAA2Bf,CAAI,CAACgB,EAC5D,CACDtB,CAAC,CAAC,gBAAD,CAAD,CAAoByB,IAApB,CAAyBR,CAAC,CAACO,MAA3B,CACH,CALD,EAKGD,IALH,CAKQ,UAAY,CAChBb,OAAO,CAACC,GAAR,CAAY,MAAZ,CACH,CAPD,CAQH,CAGJ,CAtDE,CAwDV,CA3DM,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Get the status of the hybrid question within an attempt.\n *\n * @module     local_qrsub/attempt_status\n * @package    local_qrsub\n * @copyright  2021 Knowledge One Inc. {@link http://knowledgeone.ca}\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n define(['jquery', 'core/str', 'core/ajax'],\n    function($, str, ajax) {\n\n    return {\n\n        /**\n         * Function being called by the js_call_amd()\n         * @param str type The item to reorder. assignment or section\n         */\n        init: function(step, attemptid, cmid) {\n\n            if (step == 'FINISHED') {\n                setInterval(function () { get_attempt_number(attemptid); }, 1000);\n            } else {\n                setInterval(function () { get_attempt_status(attemptid); }, 1000);\n            }\n\n            function get_attempt_number(attemptid) {\n                console.log('get_attempt_number');\n                // Send the new order to the server.\n                var promises = ajax.call([{\n                    methodname: 'local_qrsub_attempt_number',\n                    args: { 'attemptid': attemptid }\n                }]);\n\n                // Process the server response.\n                promises[0].done(function (r) {\n                    if (r.number == 0) {\n                        document.location.href = '/mod/quiz/view.php?id=' + cmid.id;\n                    }\n                }).fail(function () {\n                    console.log('get_attempt_number() fail');\n                });\n            }\n\n            function get_attempt_status(attemptid) {\n\n                console.log('get_attempt_status');\n\n                // Send the new order to the server.\n                var promises = ajax.call([{\n                    methodname: 'local_qrsub_attempt_status',\n                    args: { 'attemptid': attemptid }\n                }]);\n\n                // Process the server response.\n                promises[0].done(function (r) {\n                    if (r.status == 'finished') {\n                        document.location.href = '/mod/quiz/view.php?id=' + cmid.id;\n                    }\n                    $(\".hybrid_status\").html(r.status);\n                }).fail(function () {\n                    console.log('fail');\n                });\n            }\n\n\n        } // init()\n    };\n});\n"],"file":"attempt_status.min.js"}